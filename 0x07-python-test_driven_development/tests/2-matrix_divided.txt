"""
# Test cases for the matrix_divided function

::

    # Test 1: Valid input, divide by 2
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    >>> divisor = 2
    >>> matrix_divided(matrix, divisor)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

::

    # Test 2: Matrix contains non-integer/float values
    >>> matrix = [[1, 2, "3"], [4, 5, 6], [7, 8, 9]]
    >>> divisor = 2
    >>> matrix_divided(matrix, divisor)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::

    # Test 3: Rows have different sizes
    >>> matrix = [[1, 2, 3], [4, 5], [7, 8, 9]]
    >>> divisor = 2
    >>> matrix_divided(matrix, divisor)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

::

    # Test 4: Non-integer/float divisor
    >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    >>> divisor = "2"
    >>> matrix_divided(matrix, divisor)
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

::

    # Test 5: Division by zero
    >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    >>> divisor = 0
    >>> matrix_divided(matrix, divisor)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

::

"""