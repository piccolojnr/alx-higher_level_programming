"""

::

    # Test cases for the matrix_mul function
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

::

    # Test 1: Valid input, multiplying 2x2 matrices
    >>> matrix_a = [[1, 2], [3, 4]]
    >>> matrix_b = [[5, 6], [7, 8]]
    >>> result = matrix_mul(matrix_a, matrix_b)
    >>> for row in result:
    ...     print(row)
    [19, 22]
    [43, 50]

::

    # Test 2: Invalid input, non-rectangular matrix
    >>> matrix_a = [[1, 2], [3, 4]]
    >>> matrix_b = [[5, 6], [7]]
    >>> matrix_mul(matrix_a, matrix_b)
    Traceback (most recent call last):
        ...
    TypeError: each row of m_b must be of the same size

::

    # Test 3: Invalid input, matrices can't be multiplied
    >>> matrix_a = [[1, 2], [3, 4]]
    >>> matrix_b = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_mul(matrix_a, matrix_b)
    Traceback (most recent call last):
        ...
    ValueError: m_a and m_b can't be multiplied

::

    # Test 4: Invalid input, empty matrix
    >>> matrix_a = []
    >>> matrix_b = [[1, 2], [3, 4]]
    >>> matrix_mul(matrix_a, matrix_b)
    Traceback (most recent call last):
        ...
    ValueError: m_a can't be empty

::

    # Test 5: Invalid input, non-integer/float values in the matrices
    >>> matrix_a = [[1, 2], [3, "4"]]
    >>> matrix_b = [[5, 6], [7, 8]]
    >>> matrix_mul(matrix_a, matrix_b)
    Traceback (most recent call last):
        ...
    TypeError: m_a should contain only integers or floats

::

"""